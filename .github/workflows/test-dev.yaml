name: Test Playwright Nightly
on:
  # schedule:
  #   - cron: '30 22 * * *'   # Runs at 10:30 PM UTC everyday.
  push:
    branches: main
jobs:
  pre_test_script:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./e2e-tests
    if: always()
    steps:
      - uses: actions/checkout@v3
        with:
          ref: main

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            ./node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.4.0
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://npm.pkg.github.com/
      
      - name: Install dependencies
        run: npm ci

      - name: Pre test script
        run: npx tsx ./ci-setup.ts
        env:
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          AWS_REGION: ${{secrets.AWS_REGION}}
          CI: 1
  test:
    runs-on: ubuntu-latest
    needs: pre_test_script
    
    strategy:
      fail-fast: false
      matrix:
        node-version: ['16.10']
        shardIndex: [1, 2, 3]
        shardTotal: [3]
    
    defaults:
      run:
        working-directory: ./e2e-tests
    
    steps:
      - uses: actions/checkout@v3
        with:
          ref: feature/TEST-1826-Create-scripts-to-maintain-setup-and-teardown-functions-with-CI
            
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.4.0
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://npm.pkg.github.com/
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Install playwright dependencies (part 1)
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}

      - name: Install playwright dependencies, cache-hit is false (part 2)
        run: npx playwright install --with-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'
      - name: Install playwright dependencies, cache-hit is true (part 2)
        run: npx playwright install-deps
        if: steps.playwright-cache.outputs.cache-hit == 'true'
        
      - name: Run Playwright tests
        run:  xvfb-run --auto-servernum -- npx playwright test acceptOfferWithPre1981Vehicle.spec.ts --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}
        env:
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          AWS_REGION: ${{secrets.AWS_REGION}}
          CI: 1
          
      - name: Upload test results
        if: always()              # Run this step even if the previous step gets failed
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report-${{ matrix.shardIndex }}-${{ matrix.shardTotal }}
          path: e2e-tests/playwright-report
          retention-days: 7
  
  post_test_script:
    runs-on: ubuntu-latest
    needs: test
    defaults:
      run:
        working-directory: ./e2e-tests
    if: always()
    steps:
      - uses: actions/checkout@v3
        with:
          ref: feature/TEST-1826-Create-scripts-to-maintain-setup-and-teardown-functions-with-CI

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            ./node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.4.0
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://npm.pkg.github.com/
      
      - name: Install dependencies
        run: npm ci
        
      - name: Post test script
        run: npx tsx ./ci-teardown.ts
        env:
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          AWS_REGION: ${{secrets.AWS_REGION}}
          CI: 1
  
